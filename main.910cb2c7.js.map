{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","notification","document","createElement","classList","textContent","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAiBH,EAAW,WAClCE,EAAkBF,UAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQK,SAC/CL,mBAAAA,OAAAA,EAAQM,GADhB,UAMN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAeC,SAASC,cAAc,OAMrCD,OAJPD,EAAaG,UAAY,UAEzBH,EAAaI,YAAiBL,GAAAA,OAAAA,GAEvBE,SAASI,KAAKC,YAAYN,IAGnCO,OAAOC,QAAU,CACflB,QAAAA,EACAQ,aAAAA","file":"main.910cb2c7.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} on the element: ${element.nodeName},\n        id: ${element.id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const notification = document.createElement('div');\n\n  notification.classList = 'message';\n\n  notification.textContent = `${message}`;\n\n  return document.body.appendChild(notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}